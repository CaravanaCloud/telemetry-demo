name: DeployToEB

on:
  delete:
    branches:
      - 'eb/**'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "us-east-1"
      QUARKUS_DATASOURCE_DB_KIND: "mysql"
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: "update"
      QUARKUS_DATASOURCE_JDBC_URL: ${{ secrets.jdbc_url }}
      QUARKUS_DATASOURCE_USERNAME: ${{ secrets.jdbc_username }}
      QUARKUS_DATASOURCE_PASSWORD: ${{ secrets.jdbc_password }}
      TF_VAR_QUARKUS_DATASOURCE_DB_KIND: "mysql"
      TF_VAR_QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: "update"
      TF_VAR_QUARKUS_DATASOURCE_JDBC_URL: ${{ secrets.jdbc_url }}
      TF_VAR_QUARKUS_DATASOURCE_USERNAME: ${{ secrets.jdbc_username }}
      TF_VAR_QUARKUS_DATASOURCE_PASSWORD: ${{ secrets.jdbc_password }}
      TF_VAR_bucket_name: ${{ secrets.bucket_name }}
      TF_VAR_vpc_id: ${{ secrets.vpc_id }}
      TF_VAR_subnets: ${{ secrets.subnets }}
      TF_VAR_ssl_arn: ${{ secrets.ssl_arn }}

    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Check AWS authentication
        run: aws sts get-caller-identity

      - name: Terraform backend init
        run: |
          export TF_VAR_env_name=${BRANCH_NAME/\//}
          echo "# Terraform Init"
          echo terraform init -upgrade -backend-config="bucket=${{ env.TF_VAR_bucket_name }}" -backend-config="key=terraform/${{ env.TF_VAR_env_name }}/terraform_state" -backend-config="region=${{ env.AWS_REGION }}"
          terraform init -upgrade -backend-config="bucket=${{ env.TF_VAR_bucket_name }}" -backend-config="key=terraform/${{ env.TF_VAR_env_name }}/terraform_state" -backend-config="region=${{ env.AWS_REGION }}"
        working-directory: telemo-quarkus/src/main/eb/

      - name: Terraform refresh
        run: terraform refresh
        working-directory: telemo-quarkus/src/main/eb/
        env:
          TF_VAR_env_name: ${{ env.BRANCH_NAME }}

      - name: Terraform destroy
        run: terraform destroy -auto-approve
        working-directory: telemo-quarkus/src/main/eb/
        env:
          TF_VAR_env_name: ${{ env.BRANCH_NAME }}
